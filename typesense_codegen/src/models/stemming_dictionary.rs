/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StemmingDictionary {
    /// Unique identifier for the dictionary
    #[serde(rename = "id")]
    pub id: String,
    /// List of word mappings in the dictionary
    #[serde(rename = "words")]
    pub words: Vec<models::StemmingDictionaryWordsInner>,
}

impl StemmingDictionary {
    pub fn new(id: String, words: Vec<models::StemmingDictionaryWordsInner>) -> StemmingDictionary {
        StemmingDictionary {
            id,
            words,
        }
    }
}

