/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ExportDocumentsExportDocumentsParametersParameter {
    /// Filter conditions for refining your search results. Separate multiple conditions with &&.
    #[serde(rename = "filter_by", skip_serializing_if = "Option::is_none")]
    pub filter_by: Option<String>,
    /// List of fields from the document to include in the search result
    #[serde(rename = "include_fields", skip_serializing_if = "Option::is_none")]
    pub include_fields: Option<String>,
    /// List of fields from the document to exclude in the search result
    #[serde(rename = "exclude_fields", skip_serializing_if = "Option::is_none")]
    pub exclude_fields: Option<String>,
}

impl ExportDocumentsExportDocumentsParametersParameter {
    pub fn new() -> ExportDocumentsExportDocumentsParametersParameter {
        ExportDocumentsExportDocumentsParametersParameter {
            filter_by: None,
            include_fields: None,
            exclude_fields: None,
        }
    }
}

