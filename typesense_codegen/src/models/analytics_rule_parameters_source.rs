/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalyticsRuleParametersSource {
    #[serde(rename = "collections")]
    pub collections: Vec<String>,
    #[serde(rename = "events", skip_serializing_if = "Option::is_none")]
    pub events: Option<Vec<models::AnalyticsRuleParametersSourceEventsInner>>,
}

impl AnalyticsRuleParametersSource {
    pub fn new(collections: Vec<String>) -> AnalyticsRuleParametersSource {
        AnalyticsRuleParametersSource {
            collections,
            events: None,
        }
    }
}

