/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct AnalyticsRuleParameters {
    #[serde(rename = "source")]
    pub source: Box<models::AnalyticsRuleParametersSource>,
    #[serde(rename = "destination")]
    pub destination: Box<models::AnalyticsRuleParametersDestination>,
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
    #[serde(rename = "expand_query", skip_serializing_if = "Option::is_none")]
    pub expand_query: Option<bool>,
}

impl AnalyticsRuleParameters {
    pub fn new(source: models::AnalyticsRuleParametersSource, destination: models::AnalyticsRuleParametersDestination) -> AnalyticsRuleParameters {
        AnalyticsRuleParameters {
            source: Box::new(source),
            destination: Box::new(destination),
            limit: None,
            expand_query: None,
        }
    }
}

