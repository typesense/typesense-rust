/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SchemaChangeStatus {
    /// Name of the collection being modified
    #[serde(rename = "collection", skip_serializing_if = "Option::is_none")]
    pub collection: Option<String>,
    /// Number of documents that have been validated
    #[serde(rename = "validated_docs", skip_serializing_if = "Option::is_none")]
    pub validated_docs: Option<i32>,
    /// Number of documents that have been altered
    #[serde(rename = "altered_docs", skip_serializing_if = "Option::is_none")]
    pub altered_docs: Option<i32>,
}

impl SchemaChangeStatus {
    pub fn new() -> SchemaChangeStatus {
        SchemaChangeStatus {
            collection: None,
            validated_docs: None,
            altered_docs: None,
        }
    }
}

