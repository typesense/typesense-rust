/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StopwordsSetSchema {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "stopwords")]
    pub stopwords: Vec<String>,
    #[serde(rename = "locale", skip_serializing_if = "Option::is_none")]
    pub locale: Option<String>,
}

impl StopwordsSetSchema {
    pub fn new(id: String, stopwords: Vec<String>) -> StopwordsSetSchema {
        StopwordsSetSchema {
            id,
            stopwords,
            locale: None,
        }
    }
}

