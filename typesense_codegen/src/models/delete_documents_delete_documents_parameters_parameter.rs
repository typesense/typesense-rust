/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct DeleteDocumentsDeleteDocumentsParametersParameter {
    #[serde(rename = "filter_by")]
    pub filter_by: String,
    /// Batch size parameter controls the number of documents that should be deleted at a time. A larger value will speed up deletions, but will impact performance of other operations running on the server.
    #[serde(rename = "batch_size", skip_serializing_if = "Option::is_none")]
    pub batch_size: Option<i32>,
    #[serde(rename = "ignore_not_found", skip_serializing_if = "Option::is_none")]
    pub ignore_not_found: Option<bool>,
    /// When true, removes all documents from the collection while preserving the collection and its schema.
    #[serde(rename = "truncate", skip_serializing_if = "Option::is_none")]
    pub truncate: Option<bool>,
}

impl DeleteDocumentsDeleteDocumentsParametersParameter {
    pub fn new(filter_by: String) -> DeleteDocumentsDeleteDocumentsParametersParameter {
        DeleteDocumentsDeleteDocumentsParametersParameter {
            filter_by,
            batch_size: None,
            ignore_not_found: None,
            truncate: None,
        }
    }
}

