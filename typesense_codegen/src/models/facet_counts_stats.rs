/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.25.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FacetCountsStats {
    #[serde(rename = "max", skip_serializing_if = "Option::is_none")]
    pub max: Option<f64>,
    #[serde(rename = "min", skip_serializing_if = "Option::is_none")]
    pub min: Option<f64>,
    #[serde(rename = "sum", skip_serializing_if = "Option::is_none")]
    pub sum: Option<f64>,
    #[serde(rename = "total_values", skip_serializing_if = "Option::is_none")]
    pub total_values: Option<i32>,
    #[serde(rename = "avg", skip_serializing_if = "Option::is_none")]
    pub avg: Option<f64>,
}

impl FacetCountsStats {
    pub fn new() -> FacetCountsStats {
        FacetCountsStats {
            max: None,
            min: None,
            sum: None,
            total_values: None,
            avg: None,
        }
    }
}
