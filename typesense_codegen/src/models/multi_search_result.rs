/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct MultiSearchResult {
    #[serde(rename = "results")]
    pub results: Vec<models::MultiSearchResultItem>,
    #[serde(rename = "conversation", skip_serializing_if = "Option::is_none")]
    pub conversation: Option<Box<models::SearchResultConversation>>,
}

impl MultiSearchResult {
    pub fn new(results: Vec<models::MultiSearchResultItem>) -> MultiSearchResult {
        MultiSearchResult {
            results,
            conversation: None,
        }
    }
}

