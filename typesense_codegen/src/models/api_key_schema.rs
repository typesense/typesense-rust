/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.25.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiKeySchema {
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "actions")]
    pub actions: Vec<String>,
    #[serde(rename = "collections")]
    pub collections: Vec<String>,
    #[serde(rename = "expires_at", skip_serializing_if = "Option::is_none")]
    pub expires_at: Option<i64>,
}

impl ApiKeySchema {
    pub fn new(
        description: String,
        actions: Vec<String>,
        collections: Vec<String>,
    ) -> ApiKeySchema {
        ApiKeySchema {
            value: None,
            description,
            actions,
            collections,
            expires_at: None,
        }
    }
}
