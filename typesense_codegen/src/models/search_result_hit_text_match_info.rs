/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchResultHitTextMatchInfo {
    #[serde(rename = "best_field_score", skip_serializing_if = "Option::is_none")]
    pub best_field_score: Option<String>,
    #[serde(rename = "best_field_weight", skip_serializing_if = "Option::is_none")]
    pub best_field_weight: Option<i32>,
    #[serde(rename = "fields_matched", skip_serializing_if = "Option::is_none")]
    pub fields_matched: Option<i32>,
    #[serde(rename = "num_tokens_dropped", skip_serializing_if = "Option::is_none")]
    pub num_tokens_dropped: Option<i64>,
    #[serde(rename = "score", skip_serializing_if = "Option::is_none")]
    pub score: Option<String>,
    #[serde(rename = "tokens_matched", skip_serializing_if = "Option::is_none")]
    pub tokens_matched: Option<i32>,
    #[serde(rename = "typo_prefix_score", skip_serializing_if = "Option::is_none")]
    pub typo_prefix_score: Option<i32>,
}

impl SearchResultHitTextMatchInfo {
    pub fn new() -> SearchResultHitTextMatchInfo {
        SearchResultHitTextMatchInfo {
            best_field_score: None,
            best_field_weight: None,
            fields_matched: None,
            num_tokens_dropped: None,
            score: None,
            tokens_matched: None,
            typo_prefix_score: None,
        }
    }
}

