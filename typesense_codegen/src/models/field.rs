/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.25.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Field {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "type")]
    pub r#type: String,
    #[serde(rename = "optional", skip_serializing_if = "Option::is_none")]
    pub optional: Option<bool>,
    #[serde(rename = "facet", skip_serializing_if = "Option::is_none")]
    pub facet: Option<bool>,
    #[serde(rename = "index", skip_serializing_if = "Option::is_none")]
    pub index: Option<bool>,
    #[serde(rename = "locale", skip_serializing_if = "Option::is_none")]
    pub locale: Option<String>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<bool>,
    #[serde(rename = "infix", skip_serializing_if = "Option::is_none")]
    pub infix: Option<bool>,
    #[serde(rename = "num_dim", skip_serializing_if = "Option::is_none")]
    pub num_dim: Option<i32>,
    #[serde(rename = "drop", skip_serializing_if = "Option::is_none")]
    pub drop: Option<bool>,
    #[serde(rename = "embed", skip_serializing_if = "Option::is_none")]
    pub embed: Option<Box<crate::models::FieldEmbed>>,
}

impl Field {
    pub fn new(name: String, r#type: String) -> Field {
        Field {
            name,
            r#type,
            optional: None,
            facet: None,
            index: None,
            locale: None,
            sort: None,
            infix: None,
            num_dim: None,
            drop: None,
            embed: None,
        }
    }
}
