/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApiStatsResponse {
    #[serde(rename = "delete_latency_ms", skip_serializing_if = "Option::is_none")]
    pub delete_latency_ms: Option<f64>,
    #[serde(rename = "delete_requests_per_second", skip_serializing_if = "Option::is_none")]
    pub delete_requests_per_second: Option<f64>,
    #[serde(rename = "import_latency_ms", skip_serializing_if = "Option::is_none")]
    pub import_latency_ms: Option<f64>,
    #[serde(rename = "import_requests_per_second", skip_serializing_if = "Option::is_none")]
    pub import_requests_per_second: Option<f64>,
    #[serde(rename = "latency_ms", skip_serializing_if = "Option::is_none")]
    pub latency_ms: Option<serde_json::Value>,
    #[serde(rename = "overloaded_requests_per_second", skip_serializing_if = "Option::is_none")]
    pub overloaded_requests_per_second: Option<f64>,
    #[serde(rename = "pending_write_batches", skip_serializing_if = "Option::is_none")]
    pub pending_write_batches: Option<f64>,
    #[serde(rename = "requests_per_second", skip_serializing_if = "Option::is_none")]
    pub requests_per_second: Option<serde_json::Value>,
    #[serde(rename = "search_latency_ms", skip_serializing_if = "Option::is_none")]
    pub search_latency_ms: Option<f64>,
    #[serde(rename = "search_requests_per_second", skip_serializing_if = "Option::is_none")]
    pub search_requests_per_second: Option<f64>,
    #[serde(rename = "total_requests_per_second", skip_serializing_if = "Option::is_none")]
    pub total_requests_per_second: Option<f64>,
    #[serde(rename = "write_latency_ms", skip_serializing_if = "Option::is_none")]
    pub write_latency_ms: Option<f64>,
    #[serde(rename = "write_requests_per_second", skip_serializing_if = "Option::is_none")]
    pub write_requests_per_second: Option<f64>,
}

impl ApiStatsResponse {
    pub fn new() -> ApiStatsResponse {
        ApiStatsResponse {
            delete_latency_ms: None,
            delete_requests_per_second: None,
            import_latency_ms: None,
            import_requests_per_second: None,
            latency_ms: None,
            overloaded_requests_per_second: None,
            pending_write_batches: None,
            requests_per_second: None,
            search_latency_ms: None,
            search_requests_per_second: None,
            total_requests_per_second: None,
            write_latency_ms: None,
            write_requests_per_second: None,
        }
    }
}

