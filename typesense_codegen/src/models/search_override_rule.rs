/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 0.23.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Eq, Default, Serialize, Deserialize)]
pub struct SearchOverrideRule {
    /// Indicates what search queries should be overridden
    #[serde(rename = "query")]
    pub query: String,
    /// Indicates whether the match on the query term should be `exact` or `contains`. If we want to match all queries that contained the word `apple`, we will use the `contains` match instead.
    #[serde(rename = "match")]
    pub _match: Match,
}

impl SearchOverrideRule {
    pub fn new(query: String, _match: Match) -> SearchOverrideRule {
        SearchOverrideRule { query, _match }
    }
}

/// Indicates whether the match on the query term should be `exact` or `contains`. If we want to match all queries that contained the word `apple`, we will use the `contains` match instead.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Match {
    #[serde(rename = "exact")]
    Exact,
    #[serde(rename = "contains")]
    Contains,
}

impl Default for Match {
    fn default() -> Match {
        Self::Exact
    }
}
