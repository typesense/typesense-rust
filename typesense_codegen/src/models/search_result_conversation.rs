/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchResultConversation {
    #[serde(rename = "answer")]
    pub answer: String,
    #[serde(rename = "conversation_history")]
    pub conversation_history: Vec<serde_json::Value>,
    #[serde(rename = "conversation_id")]
    pub conversation_id: String,
    #[serde(rename = "query")]
    pub query: String,
}

impl SearchResultConversation {
    pub fn new(answer: String, conversation_history: Vec<serde_json::Value>, conversation_id: String, query: String) -> SearchResultConversation {
        SearchResultConversation {
            answer,
            conversation_history,
            conversation_id,
            query,
        }
    }
}

