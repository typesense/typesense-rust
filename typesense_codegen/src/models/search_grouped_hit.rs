/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchGroupedHit {
    #[serde(rename = "found", skip_serializing_if = "Option::is_none")]
    pub found: Option<i32>,
    #[serde(rename = "group_key")]
    pub group_key: Vec<serde_json::Value>,
    /// The documents that matched the search query
    #[serde(rename = "hits")]
    pub hits: Vec<models::SearchResultHit>,
}

impl SearchGroupedHit {
    pub fn new(group_key: Vec<serde_json::Value>, hits: Vec<models::SearchResultHit>) -> SearchGroupedHit {
        SearchGroupedHit {
            found: None,
            group_key,
            hits,
        }
    }
}

