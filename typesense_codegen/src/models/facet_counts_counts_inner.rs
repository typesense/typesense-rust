/*
 * Typesense API
 *
 * An open source search engine for building delightful search experiences.
 *
 * The version of the OpenAPI document: 28.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FacetCountsCountsInner {
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
    #[serde(rename = "highlighted", skip_serializing_if = "Option::is_none")]
    pub highlighted: Option<String>,
    #[serde(rename = "value", skip_serializing_if = "Option::is_none")]
    pub value: Option<String>,
    #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
    pub parent: Option<serde_json::Value>,
}

impl FacetCountsCountsInner {
    pub fn new() -> FacetCountsCountsInner {
        FacetCountsCountsInner {
            count: None,
            highlighted: None,
            value: None,
            parent: None,
        }
    }
}

